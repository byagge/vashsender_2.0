#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Django –¥–ª—è DKIM
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ Django –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/var/www/vashsender')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings.production')

import django
django.setup()

from django.conf import settings
from apps.emails.models import Domain

def check_email_settings():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ email"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ email –≤ Django...")
    
    print(f"EMAIL_HOST: {getattr(settings, 'EMAIL_HOST', '–ù–ï –ó–ê–î–ê–ù–û')}")
    print(f"EMAIL_PORT: {getattr(settings, 'EMAIL_PORT', '–ù–ï –ó–ê–î–ê–ù–û')}")
    print(f"EMAIL_USE_TLS: {getattr(settings, 'EMAIL_USE_TLS', '–ù–ï –ó–ê–î–ê–ù–û')}")
    print(f"EMAIL_USE_SSL: {getattr(settings, 'EMAIL_USE_SSL', '–ù–ï –ó–ê–î–ê–ù–û')}")
    print(f"EMAIL_USE_OPENDKIM: {getattr(settings, 'EMAIL_USE_OPENDKIM', '–ù–ï –ó–ê–î–ê–ù–û')}")
    print(f"DEFAULT_FROM_EMAIL: {getattr(settings, 'DEFAULT_FROM_EMAIL', '–ù–ï –ó–ê–î–ê–ù–û')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è OpenDKIM
    if getattr(settings, 'EMAIL_HOST', '') == 'localhost' and getattr(settings, 'EMAIL_PORT', 0) == 25:
        print("‚úÖ Email –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ localhost (Postfix)")
    else:
        print("‚ùå Email –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è localhost. –ù—É–∂–Ω–æ:")
        print("   EMAIL_HOST = 'localhost'")
        print("   EMAIL_PORT = 25")

def check_domains():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    domains = Domain.objects.all()
    
    if not domains.exists():
        print("‚ùå –ù–µ—Ç –¥–æ–º–µ–Ω–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    for domain in domains:
        print(f"\nüìã –î–æ–º–µ–Ω: {domain.domain_name}")
        print(f"   DKIM –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: {'‚úÖ' if domain.dkim_verified else '‚ùå'}")
        print(f"   –°–µ–ª–µ–∫—Ç–æ—Ä: {domain.dkim_selector}")
        print(f"   –ü—É—Ç—å –∫ –∫–ª—é—á—É: {domain.private_key_path or '–ù–ï –ó–ê–î–ê–ù'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º –º–µ—Å—Ç–µ
        keys_dir = getattr(settings, 'DKIM_KEYS_DIR', '/etc/opendkim/keys')
        standard_key_path = os.path.join(keys_dir, domain.domain_name, f"{domain.dkim_selector}.private")
        
        if os.path.exists(standard_key_path):
            print(f"   –ö–ª—é—á –≤ OpenDKIM: ‚úÖ {standard_key_path}")
        else:
            print(f"   –ö–ª—é—á –≤ OpenDKIM: ‚ùå {standard_key_path}")

def check_campaign_from_domains():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π –≤ –∫–∞–º–ø–∞–Ω–∏—è—Ö"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π –≤ –∫–∞–º–ø–∞–Ω–∏—è—Ö...")
    
    try:
        from apps.campaigns.models import Campaign
        from apps.emails.models import SenderEmail
        
        # –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–æ–º–µ–Ω—ã –∏–∑ SenderEmail
        sender_emails = SenderEmail.objects.all()
        
        if not sender_emails.exists():
            print("‚ùå –ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π")
            return
        
        sender_domains = set()
        for sender_email in sender_emails:
            if '@' in sender_email.email:
                domain = sender_email.email.split('@')[1]
                sender_domains.add(domain)
        
        print(f"–ù–∞–π–¥–µ–Ω–æ –¥–æ–º–µ–Ω–æ–≤ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π: {len(sender_domains)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ DKIM –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–º–µ–Ω–∞
        for domain_name in sender_domains:
            try:
                domain = Domain.objects.get(domain_name=domain_name)
                if domain.dkim_verified:
                    print(f"‚úÖ {domain_name} - DKIM –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                else:
                    print(f"‚ùå {domain_name} - DKIM –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω")
            except Domain.DoesNotExist:
                print(f"‚ùå {domain_name} - –¥–æ–º–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–º–ø–∞–Ω–∏–π: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Django –¥–ª—è DKIM")
    print("=" * 50)
    
    check_email_settings()
    check_domains()
    check_campaign_from_domains()
    
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ EMAIL_HOST = 'localhost' –∏ EMAIL_PORT = 25")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ EMAIL_USE_OPENDKIM = True")
    print("3. –í—Å–µ –¥–æ–º–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–º DKIM")
    print("4. –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–ª—é—á–∏ –¥–æ–ª–∂–Ω—ã —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –≤ /etc/opendkim/keys/")

if __name__ == "__main__":
    main()
