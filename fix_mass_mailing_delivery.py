#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –º–∞—Å—Å–æ–≤—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫
–†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –ø–∏—Å–µ–º –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞ —Ç—ã—Å—è—á–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
"""

import os
import sys
import time
import smtplib
import dns.resolver
import subprocess
from pathlib import Path

def print_section(title):
    """–ü–µ—á–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–µ–∫—Ü–∏–∏"""
    print(f"\n{'='*60}")
    print(f"  {title}")
    print(f"{'='*60}")

def print_step(step, description):
    """–ü–µ—á–∞—Ç—å —à–∞–≥–∞"""
    print(f"\n{step}. {description}")

def check_smtp_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
    print_step(1, "–ü—Ä–æ–≤–µ—Ä–∫–∞ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
    
    try:
        # –ß–∏—Ç–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ env —Ñ–∞–π–ª–∞
        env_file = Path('.env')
        if not env_file.exists():
            env_file = Path('env')
        
        if not env_file.exists():
            print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ü–∞—Ä—Å–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        settings = {}
        with open(env_file, 'r') as f:
            for line in f:
                line = line.strip()
                if '=' in line and not line.startswith('#'):
                    key, value = line.split('=', 1)
                    settings[key] = value
        
        email_host = settings.get('EMAIL_HOST', 'localhost')
        email_port = int(settings.get('EMAIL_PORT', 25))
        email_use_tls = settings.get('EMAIL_USE_TLS', 'False').lower() == 'true'
        email_user = settings.get('EMAIL_HOST_USER', '')
        email_password = settings.get('EMAIL_HOST_PASSWORD', '')
        
        print(f"üìß SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print(f"   Host: {email_host}")
        print(f"   Port: {email_port}")
        print(f"   TLS: {email_use_tls}")
        print(f"   User: {email_user if email_user else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
        
        if email_host == 'localhost':
            print("‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–π SMTP —Å–µ—Ä–≤–µ—Ä")
            print("   –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –ø—Ä–æ–±–ª–µ–º —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ Postfix
            try:
                result = subprocess.run(['systemctl', 'is-active', 'postfix'], 
                                      capture_output=True, text=True)
                if result.stdout.strip() == 'active':
                    print("‚úÖ Postfix –∑–∞–ø—É—â–µ–Ω")
                else:
                    print("‚ùå Postfix –Ω–µ –∑–∞–ø—É—â–µ–Ω")
                    return False
            except FileNotFoundError:
                print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å Postfix")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        connection = smtplib.SMTP(email_host, email_port, timeout=10)
        
        if email_use_tls:
            connection.starttls()
        
        if email_user and email_password:
            connection.login(email_user, email_password)
        
        connection.quit()
        print("‚úÖ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        return False

def check_dns_records():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –∑–∞–ø–∏—Å–µ–π"""
    print_step(2, "–ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –∑–∞–ø–∏—Å–µ–π")
    
    domain = "vashsender.ru"
    
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –∑–∞–ø–∏—Å–µ–π –¥–ª—è {domain}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º SPF
    try:
        answers = dns.resolver.resolve(domain, 'TXT')
        spf_found = False
        for answer in answers:
            if 'v=spf1' in str(answer):
                print(f"‚úÖ SPF –∑–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞: {answer}")
                spf_found = True
                break
        
        if not spf_found:
            print("‚ùå SPF –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            print("   –î–æ–±–∞–≤—å—Ç–µ TXT –∑–∞–ø–∏—Å—å: v=spf1 ip4:YOUR_SERVER_IP ~all")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ SPF: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º DMARC
    try:
        answers = dns.resolver.resolve(f'_dmarc.{domain}', 'TXT')
        dmarc_found = False
        for answer in answers:
            if 'v=DMARC1' in str(answer):
                print(f"‚úÖ DMARC –∑–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞: {answer}")
                dmarc_found = True
                break
        
        if not dmarc_found:
            print("‚ùå DMARC –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            print("   –î–æ–±–∞–≤—å—Ç–µ TXT –∑–∞–ø–∏—Å—å: v=DMARC1; p=quarantine; rua=mailto:dmarc@vashsender.ru")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ DMARC: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º DKIM
    try:
        answers = dns.resolver.resolve(f'default._domainkey.{domain}', 'TXT')
        dkim_found = False
        for answer in answers:
            if 'v=DKIM1' in str(answer):
                print(f"‚úÖ DKIM –∑–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞: {answer}")
                dkim_found = True
                break
        
        if not dkim_found:
            print("‚ùå DKIM –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            print("   –ù–∞—Å—Ç—Ä–æ–π—Ç–µ OpenDKIM –∏ –¥–æ–±–∞–≤—å—Ç–µ DNS –∑–∞–ø–∏—Å—å")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ DKIM: {e}")

def check_current_settings():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    print_step(3, "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏")
    
    env_file = Path('.env')
    if not env_file.exists():
        env_file = Path('env')
    
    if not env_file.exists():
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    settings = {}
    with open(env_file, 'r') as f:
        for line in f:
            line = line.strip()
            if '=' in line and not line.startswith('#'):
                key, value = line.split('=', 1)
                settings[key] = value
    
    print("üìä –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"   EMAIL_BATCH_SIZE: {settings.get('EMAIL_BATCH_SIZE', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
    print(f"   EMAIL_RATE_LIMIT: {settings.get('EMAIL_RATE_LIMIT', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
    print(f"   EMAIL_RETRY_DELAY: {settings.get('EMAIL_RETRY_DELAY', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º—ã
    batch_size = int(settings.get('EMAIL_BATCH_SIZE', 200))
    rate_limit = int(settings.get('EMAIL_RATE_LIMIT', 100))
    
    print(f"\n‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö:")
    
    if batch_size > 50:
        print(f"   ‚ùå EMAIL_BATCH_SIZE={batch_size} —Å–ª–∏—à–∫–æ–º –≤—ã—Å–æ–∫–∏–π")
        print(f"      –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 20-50 –¥–ª—è –º–∞—Å—Å–æ–≤—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫")
    
    if rate_limit > 10:
        print(f"   ‚ùå EMAIL_RATE_LIMIT={rate_limit} —Å–ª–∏—à–∫–æ–º –≤—ã—Å–æ–∫–∏–π")
        print(f"      –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 2-10 –ø–∏—Å–µ–º –≤ —Å–µ–∫—É–Ω–¥—É")
    
    if settings.get('EMAIL_HOST') == 'localhost':
        print(f"   ‚ùå –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–π SMTP —Å–µ—Ä–≤–µ—Ä")
        print(f"      –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: –≤–Ω–µ—à–Ω–∏–π SMTP (Yandex, Gmail, SendGrid)")

def create_optimized_settings():
    """–°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    print_step(4, "–°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫")
    
    optimized_config = """# –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –î–õ–Ø –ú–ê–°–°–û–í–´–• –†–ê–°–°–´–õ–û–ö
# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª .env

# Django settings
SECRET_KEY=2r32e44eqkx7qzufrv&3qz$(--r#t&@68%f2p$xhn=8!dvztfe
DEBUG=False

# Database settings
DATABASE_URL=sqlite:///db.sqlite3

# Redis settings
REDIS_URL=redis://localhost:6379/0

# Email settings - –í–´–ë–ï–†–ò–¢–ï –û–î–ò–ù –í–ê–†–ò–ê–ù–¢

# –í–ê–†–ò–ê–ù–¢ 1: Yandex SMTP (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –†–æ—Å—Å–∏–∏)
EMAIL_HOST=smtp.yandex.ru
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_USE_SSL=False
EMAIL_HOST_USER=your-email@yandex.ru
EMAIL_HOST_PASSWORD=your-password
DEFAULT_FROM_EMAIL=your-email@yandex.ru

# –í–ê–†–ò–ê–ù–¢ 2: Gmail SMTP
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_USE_SSL=False
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-app-password
# DEFAULT_FROM_EMAIL=your-email@gmail.com

# –í–ê–†–ò–ê–ù–¢ 3: SendGrid
# EMAIL_HOST=smtp.sendgrid.net
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_USE_SSL=False
# EMAIL_HOST_USER=apikey
# EMAIL_HOST_PASSWORD=your-sendgrid-api-key
# DEFAULT_FROM_EMAIL=noreply@vashsender.ru

# –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –î–õ–Ø –ú–ê–°–°–û–í–´–• –†–ê–°–°–´–õ–û–ö
EMAIL_BATCH_SIZE=20          # –£–º–µ–Ω—å—à–µ–Ω–æ —Å 200 –¥–æ 20
EMAIL_RATE_LIMIT=5           # –£–º–µ–Ω—å—à–µ–Ω–æ —Å 100 –¥–æ 5 –ø–∏—Å–µ–º –≤ —Å–µ–∫—É–Ω–¥—É
EMAIL_MAX_RETRIES=3
EMAIL_RETRY_DELAY=120        # –£–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 2 –º–∏–Ω—É—Ç
EMAIL_CONNECTION_TIMEOUT=30
EMAIL_SEND_TIMEOUT=60

# Celery settings
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# Security settings
ALLOWED_HOSTS=vashsender.ru,www.vashsender.ru,localhost,127.0.0.1
CSRF_TRUSTED_ORIGINS=https://vashsender.ru,https://www.vashsender.ru
"""
    
    try:
        with open('optimized_env_settings.txt', 'w', encoding='utf-8') as f:
            f.write(optimized_config)
        
        print("‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ optimized_env_settings.txt")
        print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
        print("1. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ SMTP (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Yandex)")
        print("2. –ó–∞–º–µ–Ω–∏—Ç–µ your-email@yandex.ru –∏ your-password –Ω–∞ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ")
        print("3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª .env")
        print("4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")

def create_gradual_increase_script():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –æ–±—ä–µ–º–∞"""
    print_step(5, "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –æ–±—ä–µ–º–∞")
    
    script_content = """#!/usr/bin/env python3
\"\"\"
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –æ–±—ä–µ–º–∞ —Ä–∞—Å—Å—ã–ª–æ–∫
–ü–æ–º–æ–≥–∞–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤ —Å–ø–∞–º –ø—Ä–∏ –º–∞—Å—Å–æ–≤—ã—Ö —Ä–∞—Å—Å—ã–ª–∫–∞—Ö
\"\"\"

import os
import time
from datetime import datetime, timedelta

def update_settings_for_volume(target_volume):
    \"\"\"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ü–µ–ª–µ–≤–æ–≥–æ –æ–±—ä–µ–º–∞\"\"\"
    
    if target_volume <= 100:
        # –ú–∞–ª—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏ (–¥–æ 100 –ø–∏—Å–µ–º)
        settings = {
            'EMAIL_BATCH_SIZE': 10,
            'EMAIL_RATE_LIMIT': 2,
            'EMAIL_RETRY_DELAY': 60
        }
    elif target_volume <= 500:
        # –°—Ä–µ–¥–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ (100-500 –ø–∏—Å–µ–º)
        settings = {
            'EMAIL_BATCH_SIZE': 20,
            'EMAIL_RATE_LIMIT': 5,
            'EMAIL_RETRY_DELAY': 120
        }
    elif target_volume <= 1000:
        # –ë–æ–ª—å—à–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ (500-1000 –ø–∏—Å–µ–º)
        settings = {
            'EMAIL_BATCH_SIZE': 30,
            'EMAIL_RATE_LIMIT': 8,
            'EMAIL_RETRY_DELAY': 180
        }
    else:
        # –û—á–µ–Ω—å –±–æ–ª—å—à–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ (1000+ –ø–∏—Å–µ–º)
        settings = {
            'EMAIL_BATCH_SIZE': 50,
            'EMAIL_RATE_LIMIT': 10,
            'EMAIL_RETRY_DELAY': 300
        }
    
    return settings

def calculate_send_time(volume, rate_limit):
    \"\"\"–†–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏\"\"\"
    batches = (volume + 19) // 20  # –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö
    time_per_batch = 20 / rate_limit  # —Å–µ–∫—É–Ω–¥ –Ω–∞ –±–∞—Ç—á
    total_time = batches * time_per_batch
    return total_time

def main():
    print("üìä –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ–±—ä–µ–º–∞ —Ä–∞—Å—Å—ã–ª–æ–∫")
    print("=" * 40)
    
    while True:
        try:
            volume = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∏—Å–µ–º –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: "))
            break
        except ValueError:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ")
    
    settings = update_settings_for_volume(volume)
    send_time = calculate_send_time(volume, settings['EMAIL_RATE_LIMIT'])
    
    print(f"\\nüìà –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è {volume} –ø–∏—Å–µ–º:")
    print(f"   EMAIL_BATCH_SIZE: {settings['EMAIL_BATCH_SIZE']}")
    print(f"   EMAIL_RATE_LIMIT: {settings['EMAIL_RATE_LIMIT']}")
    print(f"   EMAIL_RETRY_DELAY: {settings['EMAIL_RETRY_DELAY']}")
    print(f"\\n‚è±Ô∏è  –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {send_time:.1f} —Å–µ–∫—É–Ω–¥")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print(f"\\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    if volume > 1000:
        print("   - –†–∞–∑–¥–µ–ª–∏—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å—Ç–µ–π")
        print("   - –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 1-2 —á–∞—Å–∞")
        print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω–µ—à–Ω–∏–π SMTP (Yandex, Gmail)")
    elif volume > 500:
        print("   - –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤ –Ω–µ—Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è")
        print("   - –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ—Å—Ç–∏")
    else:
        print("   - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –æ–±—ä–µ–º–∞")

if __name__ == "__main__":
    main()
"""
    
    try:
        with open('calculate_mailing_volume.py', 'w', encoding='utf-8') as f:
            f.write(script_content)
        
        print("‚úÖ –°–∫—Ä–∏–ø—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å–æ–∑–¥–∞–Ω: calculate_mailing_volume.py")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python calculate_mailing_volume.py")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞: {e}")

def create_monitoring_script():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ—Å—Ç–∏"""
    print_step(6, "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    
    script_content = """#!/usr/bin/env python3
\"\"\"
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ—Å—Ç–∏ –ø–∏—Å–µ–º
\"\"\"

import os
import sys
import django
from datetime import datetime, timedelta

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

from apps.campaigns.models import Campaign, CampaignRecipient
from apps.mailer.models import Contact

def check_deliverability():
    \"\"\"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ—Å—Ç–∏\"\"\"
    
    print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ—Å—Ç–∏")
    print("=" * 50)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
    yesterday = datetime.now() - timedelta(days=1)
    
    campaigns = Campaign.objects.filter(
        created_at__gte=yesterday
    ).order_by('-created_at')
    
    if not campaigns.exists():
        print("üì≠ –ù–µ—Ç –∫–∞–º–ø–∞–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞")
        return
    
    for campaign in campaigns:
        print(f"\\nüìß –ö–∞–º–ø–∞–Ω–∏—è: {campaign.name}")
        print(f"   –°—Ç–∞—Ç—É—Å: {campaign.get_status_display()}")
        print(f"   –°–æ–∑–¥–∞–Ω–∞: {campaign.created_at}")
        
        recipients = CampaignRecipient.objects.filter(campaign=campaign)
        total = recipients.count()
        sent = recipients.filter(is_sent=True).count()
        failed = recipients.filter(is_sent=False).count()
        
        if total > 0:
            success_rate = (sent / total) * 100
            print(f"   –í—Å–µ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {total}")
            print(f"   –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {sent}")
            print(f"   –û—à–∏–±–æ–∫: {failed}")
            print(f"   –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {success_rate:.1f}%")
            
            if success_rate < 80:
                print("   ‚ö†Ô∏è  –ù–∏–∑–∫–∞—è –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ—Å—Ç—å!")
            elif success_rate < 95:
                print("   ‚ö†Ô∏è  –°—Ä–µ–¥–Ω—è—è –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ—Å—Ç—å")
            else:
                print("   ‚úÖ –•–æ—Ä–æ—à–∞—è –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ—Å—Ç—å")

def check_recent_errors():
    \"\"\"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—à–∏–±–æ–∫\"\"\"
    
    print("\\nüîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–µ—É–¥–∞—á–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    failed_recipients = CampaignRecipient.objects.filter(
        is_sent=False,
        created_at__gte=datetime.now() - timedelta(hours=1)
    ).select_related('campaign', 'contact')[:10]
    
    if not failed_recipients.exists():
        print("‚úÖ –ù–µ—Ç –æ—à–∏–±–æ–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å")
        return
    
    for recipient in failed_recipients:
        print(f"\\n‚ùå –û—à–∏–±–∫–∞:")
        print(f"   –ö–∞–º–ø–∞–Ω–∏—è: {recipient.campaign.name}")
        print(f"   Email: {recipient.contact.email}")
        print(f"   –í—Ä–µ–º—è: {recipient.created_at}")

def main():
    check_deliverability()
    check_recent_errors()

if __name__ == "__main__":
    main()
"""
    
    try:
        with open('monitor_deliverability.py', 'w', encoding='utf-8') as f:
            f.write(script_content)
        
        print("‚úÖ –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–∑–¥–∞–Ω: monitor_deliverability.py")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python monitor_deliverability.py")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print_section("–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú –° –î–û–°–¢–ê–í–ö–û–ô –ú–ê–°–°–û–í–´–• –†–ê–°–°–´–õ–û–ö")
    
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –ø–∏—Å–µ–º –ø—Ä–∏ –º–∞—Å—Å–æ–≤—ã—Ö —Ä–∞—Å—Å—ã–ª–∫–∞—Ö")
    print("   –ü—Ä–æ–±–ª–µ–º–∞: –ø–∏—Å—å–º–∞ –Ω–µ –¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞ —Ç—ã—Å—è—á–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏
    smtp_ok = check_smtp_connection()
    check_dns_records()
    check_current_settings()
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ—à–µ–Ω–∏—è
    create_optimized_settings()
    create_gradual_increase_script()
    create_monitoring_script()
    
    print_section("–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò")
    
    print("üöÄ –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:")
    print("1. –ó–∞–º–µ–Ω–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π SMTP –Ω–∞ –≤–Ω–µ—à–Ω–∏–π (Yandex, Gmail, SendGrid)")
    print("2. –£–º–µ–Ω—å—à–∏—Ç–µ EMAIL_BATCH_SIZE –¥–æ 20-50")
    print("3. –£–º–µ–Ω—å—à–∏—Ç–µ EMAIL_RATE_LIMIT –¥–æ 2-10 –ø–∏—Å–µ–º/—Å–µ–∫")
    print("4. –£–≤–µ–ª–∏—á—å—Ç–µ EMAIL_RETRY_DELAY –¥–æ 120-300 —Å–µ–∫—É–Ω–¥")
    
    print("\\nüìà –°—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ä–∞—Å—Å—ã–ª–æ–∫:")
    print("1. –ù–∞—á–∏–Ω–∞–π—Ç–µ —Å –º–∞–ª—ã—Ö –æ–±—ä–µ–º–æ–≤ (50-100 –ø–∏—Å–µ–º)")
    print("2. –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –æ–±—ä–µ–º")
    print("3. –†–∞–∑–¥–µ–ª—è–π—Ç–µ –±–æ–ª—å—à–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–∞ —á–∞—Å—Ç–∏")
    print("4. –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –≤ –Ω–µ—Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è")
    print("5. –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ—Å—Ç–∏")
    
    print("\\nüîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É–ª—É—á—à–µ–Ω–∏—è:")
    print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SPF, DKIM, DMARC DNS –∑–∞–ø–∏—Å–∏")
    print("2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
    print("3. –î–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏")
    print("4. –ò–∑–±–µ–≥–∞–π—Ç–µ —Å–ø–∞–º-—Å–ª–æ–≤ –≤ –ø–∏—Å—å–º–∞—Ö")
    
    print("\\nüìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    print("   - optimized_env_settings.txt (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)")
    print("   - calculate_mailing_volume.py (–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ–±—ä–µ–º–∞)")
    print("   - monitor_deliverability.py (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ—Å—Ç–∏)")
    
    if not smtp_ok:
        print("\\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä–æ–±–ª–µ–º—ã —Å SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º!")
        print("   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≤–Ω–µ—à–Ω–∏–π SMTP")

if __name__ == "__main__":
    main() 