#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PTR –∑–∞–ø–∏—Å–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Gmail
"""

import os
import sys
import subprocess
import socket
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, '/var/www/vashsender')

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings.production')

import django
django.setup()

from django.conf import settings

def print_section(title):
    print(f"\n{'='*60}")
    print(f" {title}")
    print(f"{'='*60}")

def get_server_ip():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ IP –∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
    print_section("–ü–û–õ–£–ß–ï–ù–ò–ï IP –ê–î–†–ï–°–ê –°–ï–†–í–ï–†–ê")
    
    try:
        # –í–Ω–µ—à–Ω–∏–π IP
        external_ip = subprocess.check_output(['curl', '-s', 'ifconfig.me']).decode().strip()
        print(f"–í–Ω–µ—à–Ω–∏–π IP: {external_ip}")
        
        # –õ–æ–∫–∞–ª—å–Ω—ã–π IP
        hostname = socket.gethostname()
        local_ip = socket.gethostbyname(hostname)
        print(f"–õ–æ–∫–∞–ª—å–Ω—ã–π IP: {local_ip}")
        
        return external_ip, local_ip
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è IP: {e}")
        return None, None

def check_ptr_record(ip_address):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ PTR –∑–∞–ø–∏—Å–∏"""
    print_section("–ü–†–û–í–ï–†–ö–ê PTR –ó–ê–ü–ò–°–ò")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º PTR –∑–∞–ø–∏—Å—å
        result = subprocess.check_output(['dig', '-x', ip_address, '+short']).decode().strip()
        
        if result:
            print(f"‚úÖ PTR –∑–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞: {result}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ PTR —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–æ–º–µ–Ω
            if 'vashsender.ru' in result:
                print("‚úÖ PTR –∑–∞–ø–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ (—Å–æ–¥–µ—Ä–∂–∏—Ç vashsender.ru)")
                return True
            else:
                print("‚ö†Ô∏è  PTR –∑–∞–ø–∏—Å—å –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç vashsender.ru")
                return False
        else:
            print("‚ùå PTR –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ PTR: {e}")
        return False

def check_postfix_ipv6():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Postfix –¥–ª—è IPv6"""
    print_section("–ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö POSTFIX")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Postfix
        result = subprocess.check_output(['postconf', '-n']).decode()
        
        if 'inet_protocols = ipv4' in result:
            print("‚úÖ Postfix –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ IPv4")
            return True
        else:
            print("‚ùå Postfix –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ IPv4")
            print("–î–æ–±–∞–≤—å—Ç–µ –≤ /etc/postfix/main.cf:")
            print("inet_protocols = ipv4")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Postfix: {e}")
        return False

def check_dns_records():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –∑–∞–ø–∏—Å–µ–π"""
    print_section("–ü–†–û–í–ï–†–ö–ê DNS –ó–ê–ü–ò–°–ï–ô")
    
    domain = 'vashsender.ru'
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ SPF
    try:
        result = subprocess.check_output(['dig', 'TXT', domain, '+short']).decode()
        if 'v=spf1' in result:
            print("‚úÖ SPF –∑–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚ùå SPF –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ SPF: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ DMARC
    try:
        result = subprocess.check_output(['dig', 'TXT', f'_dmarc.{domain}', '+short']).decode()
        if 'v=DMARC1' in result:
            print("‚úÖ DMARC –∑–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚ùå DMARC –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ DMARC: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ MX
    try:
        result = subprocess.check_output(['dig', 'MX', domain, '+short']).decode()
        if result.strip():
            print("‚úÖ MX –∑–∞–ø–∏—Å–∏ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print("‚ùå MX –∑–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ MX: {e}")

def test_gmail_send():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Gmail"""
    print_section("–¢–ï–°–¢ –û–¢–ü–†–ê–í–ö–ò –í GMAIL")
    
    try:
        from django.core.mail import send_mail
        
        subject = f'Test Gmail PTR - {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}'
        message = f"""
        –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Gmail –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ PTR –∑–∞–ø–∏—Å–∏.
        
        –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {datetime.now()}
        –°–µ—Ä–≤–µ—Ä: {socket.gethostname()}
        IP: {subprocess.check_output(['curl', '-s', 'ifconfig.me']).decode().strip()}
        
        –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏:
        550-5.7.1 meet IPv6 sending guidelines regarding PTR records and authentication
        """
        
        from_email = settings.DEFAULT_FROM_EMAIL
        recipient_list = ['test@gmail.com']  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å
        
        print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞:")
        print(f"  –û—Ç: {from_email}")
        print(f"  –ö–æ–º—É: {recipient_list}")
        print(f"  –¢–µ–º–∞: {subject}")
        
        # –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∞–ª—å–Ω–æ, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print("‚ö†Ô∏è  –ü–∏—Å—å–º–æ –ù–ï –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (—Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫)")
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Django email –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False

def create_dns_instructions(ip_address):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ DNS"""
    print_section("–ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï DNS")
    
    print(f"–î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã Gmail –¥–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ DNS –∑–∞–ø–∏—Å–∏:")
    print("")
    print("1. PTR –∑–∞–ø–∏—Å—å (Reverse DNS):")
    print(f"   {ip_address}.in-addr.arpa. IN PTR mail.vashsender.ru.")
    print("")
    print("2. SPF –∑–∞–ø–∏—Å—å:")
    print(f"   vashsender.ru. IN TXT \"v=spf1 ip4:{ip_address} ~all\"")
    print("")
    print("3. DMARC –∑–∞–ø–∏—Å—å:")
    print("   _dmarc.vashsender.ru. IN TXT \"v=DMARC1; p=none; rua=mailto:dmarc@vashsender.ru; sp=none; adkim=r; aspf=r;\"")
    print("")
    print("4. MX –∑–∞–ø–∏—Å—å:")
    print("   vashsender.ru. IN MX 10 mail.vashsender.ru.")
    print("   mail.vashsender.ru. IN A " + ip_address)
    print("")
    print("–ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π –ø–æ–¥–æ–∂–¥–∏—Ç–µ 10-30 –º–∏–Ω—É—Ç –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è.")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï PTR –ó–ê–ü–ò–°–ò –î–õ–Ø GMAIL")
    print(f"–í—Ä–µ–º—è: {datetime.now()}")
    
    # –ü–æ–ª—É—á–∞–µ–º IP –∞–¥—Ä–µ—Å–∞
    external_ip, local_ip = get_server_ip()
    
    if external_ip:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º PTR –∑–∞–ø–∏—Å—å
        ptr_ok = check_ptr_record(external_ip)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Postfix
        postfix_ok = check_postfix_ipv6()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º DNS –∑–∞–ø–∏—Å–∏
        check_dns_records()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
        send_ok = test_gmail_send()
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        create_dns_instructions(external_ip)
        
        print_section("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
        
        if ptr_ok and postfix_ok:
            print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print("üìß –ú–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –≤ Gmail")
        else:
            print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
            if not ptr_ok:
                print("   - PTR –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
            if not postfix_ok:
                print("   - Postfix –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ IPv4")
            print("")
            print("üîß –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç")
        
        print("")
        print("üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS –∑–∞–ø–∏—Å–∏ (—Å–º. –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤—ã—à–µ)")
        print("2. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Postfix: sudo ./fix_gmail_ipv6_ptr.sh")
        print("3. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 10-30 –º–∏–Ω—É—Ç –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è DNS")
        print("4. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç")
        print("5. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–µ–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –≤ Gmail")
        
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞")

if __name__ == '__main__':
    main() 