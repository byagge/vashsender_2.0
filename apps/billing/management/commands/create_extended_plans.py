from django.core.management.base import BaseCommand
from django.utils import timezone
from apps.billing.models import PlanType, Plan


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã —Å –ª–∏–º–∏—Ç–∞–º–∏ –¥–æ 1 –º–ª–Ω –ø–∏—Å–µ–º/–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤'

    def add_arguments(self, parser):
        parser.add_argument(
            '--force',
            action='store_true',
            help='–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –≤—Å–µ —Ç–∞—Ä–∏—Ñ—ã',
        )

    def handle(self, *args, **options):
        force = options.get('force')
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º —Ç–∏–ø—ã —Ç–∞—Ä–∏—Ñ–æ–≤
        letters_type, created = PlanType.objects.get_or_create(
            name='Letters',
            defaults={'description': '–¢–∞—Ä–∏—Ñ—ã —Å –ª–∏–º–∏—Ç–æ–º –ø–∏—Å–µ–º'}
        )
        subscribers_type, created = PlanType.objects.get_or_create(
            name='Subscribers', 
            defaults={'description': '–¢–∞—Ä–∏—Ñ—ã —Å –ª–∏–º–∏—Ç–æ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤'}
        )
        
        self.stdout.write(f"üìã –¢–∏–ø —Ç–∞—Ä–∏—Ñ–∞ 'Letters': {letters_type.name}")
        self.stdout.write(f"üìã –¢–∏–ø —Ç–∞—Ä–∏—Ñ–∞ 'Subscribers': {subscribers_type.name}")
        
        # –¢–∞—Ä–∏—Ñ—ã —Å –ª–∏–º–∏—Ç–æ–º –ø–∏—Å–µ–º
        letters_plans = [
            {
                'title': '–ü–∏—Å—å–º–∞ 1,000',
                'plan_type': letters_type,
                'emails_per_month': 1000,
                'subscribers': 0,
                'max_emails_per_day': 200,
                'price': 430,
                'discount': 0,
                'is_featured': False,
                'sort_order': 1
            },
            {
                'title': '–ü–∏—Å—å–º–∞ 2,000',
                'plan_type': letters_type,
                'emails_per_month': 2000,
                'subscribers': 0,
                'max_emails_per_day': 400,
                'price': 800,
                'discount': 0,
                'is_featured': False,
                'sort_order': 2
            },
            {
                'title': '–ü–∏—Å—å–º–∞ 5,000',
                'plan_type': letters_type,
                'emails_per_month': 5000,
                'subscribers': 0,
                'max_emails_per_day': 1000,
                'price': 1500,
                'discount': 0,
                'is_featured': False,
                'sort_order': 3
            },
            {
                'title': '–ü–∏—Å—å–º–∞ 10,000',
                'plan_type': letters_type,
                'emails_per_month': 10000,
                'subscribers': 0,
                'max_emails_per_day': 2000,
                'price': 2500,
                'discount': 0,
                'is_featured': True,
                'sort_order': 4
            },
            {
                'title': '–ü–∏—Å—å–º–∞ 25,000',
                'plan_type': letters_type,
                'emails_per_month': 25000,
                'subscribers': 0,
                'max_emails_per_day': 5000,
                'price': 5500,
                'discount': 0,
                'is_featured': False,
                'sort_order': 5
            },
            {
                'title': '–ü–∏—Å—å–º–∞ 50,000',
                'plan_type': letters_type,
                'emails_per_month': 50000,
                'subscribers': 0,
                'max_emails_per_day': 10000,
                'price': 9999,
                'discount': 0,
                'is_featured': False,
                'sort_order': 6
            },
            {
                'title': '–ü–∏—Å—å–º–∞ 100,000',
                'plan_type': letters_type,
                'emails_per_month': 100000,
                'subscribers': 0,
                'max_emails_per_day': 20000,
                'price': 17999,
                'discount': 0,
                'is_featured': False,
                'sort_order': 7
            },
            {
                'title': '–ü–∏—Å—å–º–∞ 250,000',
                'plan_type': letters_type,
                'emails_per_month': 250000,
                'subscribers': 0,
                'max_emails_per_day': 50000,
                'price': 39999,
                'discount': 0,
                'is_featured': False,
                'sort_order': 8
            },
            {
                'title': '–ü–∏—Å—å–º–∞ 500,000',
                'plan_type': letters_type,
                'emails_per_month': 500000,
                'subscribers': 0,
                'max_emails_per_day': 100000,
                'price': 69999,
                'discount': 0,
                'is_featured': False,
                'sort_order': 9
            },
            {
                'title': '–ü–∏—Å—å–º–∞ 1,000,000',
                'plan_type': letters_type,
                'emails_per_month': 1000000,
                'subscribers': 0,
                'max_emails_per_day': 200000,
                'price': 129999,
                'discount': 0,
                'is_featured': False,
                'sort_order': 10
            }
        ]
        
        # –¢–∞—Ä–∏—Ñ—ã —Å –ª–∏–º–∏—Ç–æ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
        subscribers_plans = [
            {
                'title': '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ 1,000',
                'plan_type': subscribers_type,
                'emails_per_month': 0,
                'subscribers': 1000,
                'max_emails_per_day': 200,
                'price': 770,
                'discount': 0,
                'is_featured': False,
                'sort_order': 1
            },
            {
                'title': '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ 2,000',
                'plan_type': subscribers_type,
                'emails_per_month': 0,
                'subscribers': 2000,
                'max_emails_per_day': 400,
                'price': 1500,
                'discount': 0,
                'is_featured': False,
                'sort_order': 2
            },
            {
                'title': '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ 5,000',
                'plan_type': subscribers_type,
                'emails_per_month': 0,
                'subscribers': 5000,
                'max_emails_per_day': 1000,
                'price': 2900,
                'discount': 0,
                'is_featured': False,
                'sort_order': 3
            },
            {
                'title': '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ 10,000',
                'plan_type': subscribers_type,
                'emails_per_month': 0,
                'subscribers': 10000,
                'max_emails_per_day': 2000,
                'price': 4900,
                'discount': 0,
                'is_featured': True,
                'sort_order': 4
            },
            {
                'title': '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ 25,000',
                'plan_type': subscribers_type,
                'emails_per_month': 0,
                'subscribers': 25000,
                'max_emails_per_day': 5000,
                'price': 9999,
                'discount': 0,
                'is_featured': False,
                'sort_order': 5
            },
            {
                'title': '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ 50,000',
                'plan_type': subscribers_type,
                'emails_per_month': 0,
                'subscribers': 50000,
                'max_emails_per_day': 10000,
                'price': 17999,
                'discount': 0,
                'is_featured': False,
                'sort_order': 6
            },
            {
                'title': '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ 100,000',
                'plan_type': subscribers_type,
                'emails_per_month': 0,
                'subscribers': 100000,
                'max_emails_per_day': 20000,
                'price': 29999,
                'discount': 0,
                'is_featured': False,
                'sort_order': 7
            },
            {
                'title': '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ 250,000',
                'plan_type': subscribers_type,
                'emails_per_month': 0,
                'subscribers': 250000,
                'max_emails_per_day': 50000,
                'price': 54999,
                'discount': 0,
                'is_featured': False,
                'sort_order': 8
            },
            {
                'title': '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ 500,000',
                'plan_type': subscribers_type,
                'emails_per_month': 0,
                'subscribers': 500000,
                'max_emails_per_day': 100000,
                'price': 99999,
                'discount': 0,
                'is_featured': False,
                'sort_order': 9
            },
            {
                'title': '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ 1,000,000',
                'plan_type': subscribers_type,
                'emails_per_month': 0,
                'subscribers': 1000000,
                'max_emails_per_day': 200000,
                'price': 179999,
                'discount': 0,
                'is_featured': False,
                'sort_order': 10
            }
        ]
        
        all_plans = letters_plans + subscribers_plans
        created_count = 0
        updated_count = 0
        
        for plan_data in all_plans:
            plan, created = Plan.objects.get_or_create(
                title=plan_data['title'],
                plan_type=plan_data['plan_type'],
                defaults=plan_data
            )
            
            if created:
                created_count += 1
                self.stdout.write(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–∞—Ä–∏—Ñ: {plan.title} - {plan.price}‚ÇΩ")
            else:
                if force:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ
                    for key, value in plan_data.items():
                        setattr(plan, key, value)
                    plan.save()
                    updated_count += 1
                    self.stdout.write(f"üîÑ –û–±–Ω–æ–≤–ª—ë–Ω —Ç–∞—Ä–∏—Ñ: {plan.title} - {plan.price}‚ÇΩ")
                else:
                    self.stdout.write(f"‚è≠Ô∏è  –¢–∞—Ä–∏—Ñ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {plan.title}")
        
        self.stdout.write(self.style.SUCCESS(
            f"\nüìä –ò—Ç–æ–≥–æ: —Å–æ–∑–¥–∞–Ω–æ {created_count}, –æ–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} —Ç–∞—Ä–∏—Ñ–æ–≤"
        ))
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        self.stdout.write("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤:")
        for plan_type in [letters_type, subscribers_type]:
            plans = Plan.objects.filter(plan_type=plan_type, is_active=True).order_by('sort_order')
            self.stdout.write(f"\n{plan_type.name}:")
            for plan in plans:
                if plan.plan_type.name == 'Letters':
                    limit = f"{plan.emails_per_month:,} –ø–∏—Å–µ–º"
                else:
                    limit = f"{plan.subscribers:,} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤"
                self.stdout.write(f"  - {plan.title}: {limit} - {plan.price}‚ÇΩ") 