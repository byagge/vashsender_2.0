#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∫–∞–º–ø–∞–Ω–∏–π
"""

import os
import sys
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, '/var/www/vashsender')

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings.production')

import django
django.setup()

from django.utils import timezone
from django.db import transaction
from apps.campaigns.models import Campaign, CampaignRecipient

def print_section(title):
    print(f"\n{'='*50}")
    print(f" {title}")
    print(f"{'='*50}")

def check_campaign_statuses():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∫–∞–º–ø–∞–Ω–∏–π"""
    print_section("–ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–û–í –ö–ê–ú–ü–ê–ù–ò–ô")
    
    # –ö–∞–º–ø–∞–Ω–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
    recent_campaigns = Campaign.objects.filter(
        created_at__gte=timezone.now() - timedelta(hours=24)
    ).order_by('-created_at')
    
    print(f"–ù–∞–π–¥–µ–Ω–æ {recent_campaigns.count()} –∫–∞–º–ø–∞–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞")
    
    for campaign in recent_campaigns:
        print(f"\nüìß –ö–∞–º–ø–∞–Ω–∏—è: {campaign.name}")
        print(f"   ID: {campaign.id}")
        print(f"   –°—Ç–∞—Ç—É—Å: {campaign.status}")
        print(f"   –°–æ–∑–¥–∞–Ω–∞: {campaign.created_at}")
        print(f"   –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: {campaign.sent_at}")
        print(f"   Task ID: {campaign.celery_task_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
        recipients = CampaignRecipient.objects.filter(campaign=campaign)
        sent_count = recipients.filter(is_sent=True).count()
        failed_count = recipients.filter(is_sent=False).count()
        total_count = recipients.count()
        
        print(f"   –ü–æ–ª—É—á–∞—Ç–µ–ª–∏: {sent_count} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, {failed_count} –Ω–µ—É–¥–∞—á–Ω–æ, {total_count} –≤—Å–µ–≥–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if campaign.status == 'sent' and sent_count == 0:
            print(f"   ‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê: –°—Ç–∞—Ç—É—Å 'sent', –Ω–æ –Ω–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–∏—Å–µ–º")
        elif campaign.status == 'sending' and total_count > 0 and (sent_count + failed_count) >= total_count:
            print(f"   ‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê: –°—Ç–∞—Ç—É—Å 'sending', –Ω–æ –≤—Å–µ –ø–∏—Å—å–º–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã")
        elif campaign.status == 'draft' and total_count > 0:
            print(f"   ‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê: –°—Ç–∞—Ç—É—Å 'draft', –Ω–æ –µ—Å—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª–∏")

def fix_campaign_statuses():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –∫–∞–º–ø–∞–Ω–∏–π"""
    print_section("–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–¢–ê–¢–£–°–û–í –ö–ê–ú–ü–ê–ù–ò–ô")
    
    with transaction.atomic():
        # –ù–∞—Ö–æ–¥–∏–º –∫–∞–º–ø–∞–Ω–∏–∏ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏
        campaigns_to_fix = []
        
        recent_campaigns = Campaign.objects.filter(
            created_at__gte=timezone.now() - timedelta(hours=24)
        )
        
        for campaign in recent_campaigns:
            recipients = CampaignRecipient.objects.filter(campaign=campaign)
            sent_count = recipients.filter(is_sent=True).count()
            failed_count = recipients.filter(is_sent=False).count()
            total_count = recipients.count()
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
            correct_status = None
            
            if total_count == 0:
                correct_status = 'draft'
            elif (sent_count + failed_count) >= total_count:
                if failed_count == 0 and sent_count > 0:
                    correct_status = 'sent'
                elif failed_count > 0:
                    correct_status = 'failed'
                else:
                    correct_status = 'draft'
            else:
                correct_status = 'sending'
            
            # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            if campaign.status != correct_status:
                campaigns_to_fix.append({
                    'campaign': campaign,
                    'old_status': campaign.status,
                    'new_status': correct_status,
                    'sent_count': sent_count,
                    'failed_count': failed_count,
                    'total_count': total_count
                })
        
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(campaigns_to_fix)} –∫–∞–º–ø–∞–Ω–∏–π –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã
        for fix_data in campaigns_to_fix:
            campaign = fix_data['campaign']
            old_status = fix_data['old_status']
            new_status = fix_data['new_status']
            
            print(f"\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏: {campaign.name}")
            print(f"   –°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å: {old_status}")
            print(f"   –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {new_status}")
            print(f"   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {fix_data['sent_count']}/{fix_data['total_count']} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            campaign.status = new_status
            
            # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 'sent', —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º sent_at
            if new_status == 'sent' and not campaign.sent_at:
                campaign.sent_at = timezone.now()
            
            campaign.save(update_fields=['status', 'sent_at'])
            
            print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω")

def check_email_delivery():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–∏—Å–µ–º"""
    print_section("–ü–†–û–í–ï–†–ö–ê –î–û–°–¢–ê–í–ö–ò –ü–ò–°–ï–ú")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞
    recent_recipients = CampaignRecipient.objects.filter(
        is_sent=True,
        sent_at__gte=timezone.now() - timedelta(hours=2)
    ).order_by('-sent_at')[:10]
    
    print(f"–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–∏—Å–µ–º:")
    
    for recipient in recent_recipients:
        print(f"\nüì® –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient.contact.email}")
        print(f"   –ö–∞–º–ø–∞–Ω–∏—è: {recipient.campaign.name}")
        print(f"   –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {recipient.sent_at}")
        print(f"   –°—Ç–∞—Ç—É—Å –∫–∞–º–ø–∞–Ω–∏–∏: {recipient.campaign.status}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print(f"üîç –ü–†–û–í–ï–†–ö–ê –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–¢–ê–¢–£–°–û–í –ö–ê–ú–ü–ê–ù–ò–ô - {datetime.now()}")
    
    check_campaign_statuses()
    
    response = input("\n–•–æ—Ç–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã –∫–∞–º–ø–∞–Ω–∏–π? (y/n): ")
    if response.lower() == 'y':
        fix_campaign_statuses()
    
    check_email_delivery()
    
    print_section("–†–ï–ó–£–õ–¨–¢–ê–¢")
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    print("üí° –ï—Å–ª–∏ –ø–∏—Å—å–º–∞ –Ω–µ –¥–æ—Ö–æ–¥—è—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:")
    print("   1. –õ–æ–≥–∏ Postfix: tail -f /var/log/mail.log")
    print("   2. DNS –∑–∞–ø–∏—Å–∏ –¥–æ–º–µ–Ω–∞ vashsender.ru")
    print("   3. –ë–ª–æ–∫–∏—Ä–æ–≤–∫—É IP —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏")

if __name__ == '__main__':
    main() 