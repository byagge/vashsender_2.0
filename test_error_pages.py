#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –æ—à–∏–±–æ–∫ vashsender
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django –ø—Ä–æ–µ–∫—Ç–∞
"""

import requests
import sys

def test_error_page(url, expected_status, description):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—à–∏–±–∫–∏"""
    try:
        response = requests.get(url, timeout=10)
        if response.status_code == expected_status:
            print(f"‚úÖ {description} - OK (—Å—Ç–∞—Ç—É—Å {response.status_code})")
            return True
        else:
            print(f"‚ùå {description} - –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è {expected_status}, –ø–æ–ª—É—á–µ–Ω {response.status_code})")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå {description} - –û–®–ò–ë–ö–ê –°–ï–¢–ò: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    base_url = "http://localhost:8000"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –æ—à–∏–±–æ–∫ vashsender")
    print("=" * 50)
    
    # –°–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤
    tests = [
        ("/test/404/", 404, "404 - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"),
        ("/test/400/", 400, "400 - –ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å"),
        ("/test/401/", 401, "401 - –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"),
        ("/test/403/", 403, "403 - –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω"),
        ("/test/500/", 500, "500 - –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"),
        ("/test/502/", 502, "502 - –û—à–∏–±–∫–∞ —à–ª—é–∑–∞"),
        ("/test/503/", 503, "503 - –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"),
    ]
    
    success_count = 0
    total_tests = len(tests)
    
    for url, expected_status, description in tests:
        full_url = base_url + url
        if test_error_page(full_url, expected_status, description):
            success_count += 1
        print()
    
    print("=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {success_count}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if success_count == total_tests:
        print("üéâ –í—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—à–∏–±–æ–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return 0
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django.")
        return 1

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –æ—à–∏–±–æ–∫...")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Django —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
    print("–ò DEBUG = False –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
    print()
    
    try:
        exit_code = main()
        sys.exit(exit_code)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\nüí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1) 