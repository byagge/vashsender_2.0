#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ SMTP –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
"""

import os
import sys
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, '/var/www/vashsender')

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings.production')

import django
django.setup()

from django.conf import settings
from decouple import config

def print_section(title):
    print(f"\n{'='*50}")
    print(f" {title}")
    print(f"{'='*50}")

def check_env_variables():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print_section("–ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø")
    
    env_vars = [
        'EMAIL_HOST',
        'EMAIL_PORT', 
        'EMAIL_USE_TLS',
        'EMAIL_USE_SSL',
        'EMAIL_HOST_USER',
        'EMAIL_HOST_PASSWORD',
        'DEFAULT_FROM_EMAIL'
    ]
    
    for var in env_vars:
        try:
            value = config(var, default='–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê')
            if 'PASSWORD' in var and value != '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê':
                value = '***–°–ö–†–´–¢–û***'
            print(f"{var}: {value}")
        except Exception as e:
            print(f"{var}: –û–®–ò–ë–ö–ê - {e}")

def check_django_settings():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Django"""
    print_section("–ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö DJANGO")
    
    smtp_settings = [
        'EMAIL_BACKEND',
        'EMAIL_HOST',
        'EMAIL_PORT',
        'EMAIL_USE_TLS',
        'EMAIL_USE_SSL',
        'EMAIL_HOST_USER',
        'DEFAULT_FROM_EMAIL',
        'EMAIL_TIMEOUT'
    ]
    
    for setting in smtp_settings:
        try:
            value = getattr(settings, setting, '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê')
            if 'PASSWORD' in setting and value != '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê':
                value = '***–°–ö–†–´–¢–û***'
            print(f"{setting}: {value}")
        except Exception as e:
            print(f"{setting}: –û–®–ò–ë–ö–ê - {e}")

def test_smtp_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
    print_section("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SMTP –°–û–ï–î–ò–ù–ï–ù–ò–Ø")
    
    try:
        host = config('EMAIL_HOST', default='localhost')
        port = config('EMAIL_PORT', default=25, cast=int)
        use_tls = config('EMAIL_USE_TLS', default=False, cast=bool)
        use_ssl = config('EMAIL_USE_SSL', default=False, cast=bool)
        username = config('EMAIL_HOST_USER', default='')
        password = config('EMAIL_HOST_PASSWORD', default='')
        
        print(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {host}:{port}")
        print(f"TLS: {use_tls}, SSL: {use_ssl}")
        print(f"Username: {username}")
        
        if use_ssl:
            server = smtplib.SMTP_SSL(host, port, timeout=30)
        else:
            server = smtplib.SMTP(host, port, timeout=30)
        
        server.set_debuglevel(1)  # –í–∫–ª—é—á–∞–µ–º –æ—Ç–ª–∞–¥–∫—É
        
        if use_tls:
            server.starttls()
        
        if username and password:
            server.login(username, password)
            print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
        from_email = config('DEFAULT_FROM_EMAIL', default='noreply@vashsender.ru')
        to_email = 'test@example.com'  # –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å
        
        msg = MIMEMultipart()
        msg['From'] = from_email
        msg['To'] = to_email
        msg['Subject'] = f'SMTP Test - {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}'
        
        body = f"""
        –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ SMTP –Ω–∞—Å—Ç—Ä–æ–µ–∫.
        
        –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {datetime.now()}
        SMTP —Å–µ—Ä–≤–µ—Ä: {host}:{port}
        TLS: {use_tls}
        SSL: {use_ssl}
        """
        
        msg.attach(MIMEText(body, 'plain'))
        
        # –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∞–ª—å–Ω–æ, —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–∏—Ä—É–µ–º
        print("‚úÖ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚ö†Ô∏è  –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –ù–ï –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (—Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è)")
        
        server.quit()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ SMTP: {e}")
        return False

def test_django_email():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ Django"""
    print_section("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï DJANGO EMAIL")
    
    try:
        from django.core.mail import send_mail
        from django.conf import settings
        
        subject = f'Django Email Test - {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}'
        message = f"""
        –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ —á–µ—Ä–µ–∑ Django.
        
        –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {datetime.now()}
        EMAIL_BACKEND: {settings.EMAIL_BACKEND}
        EMAIL_HOST: {settings.EMAIL_HOST}
        """
        
        from_email = settings.DEFAULT_FROM_EMAIL
        recipient_list = ['test@example.com']  # –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å
        
        print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞:")
        print(f"  –û—Ç: {from_email}")
        print(f"  –ö–æ–º—É: {recipient_list}")
        print(f"  –¢–µ–º–∞: {subject}")
        
        # –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∞–ª—å–Ω–æ
        print("‚ö†Ô∏è  –ü–∏—Å—å–º–æ –ù–ï –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (—Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫)")
        print("‚úÖ Django email –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Django email: {e}")
        return False

def check_recent_campaigns():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫–∞–º–ø–∞–Ω–∏–π"""
    print_section("–ü–û–°–õ–ï–î–ù–ò–ï –ö–ê–ú–ü–ê–ù–ò–ò")
    
    try:
        from apps.campaigns.models import Campaign
        from django.utils import timezone
        from datetime import timedelta
        
        # –ö–∞–º–ø–∞–Ω–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —á–∞—Å–∞
        recent_campaigns = Campaign.objects.filter(
            created_at__gte=timezone.now() - timedelta(hours=2)
        ).order_by('-created_at')[:5]
        
        for campaign in recent_campaigns:
            print(f"\n–ö–∞–º–ø–∞–Ω–∏—è: {campaign.name}")
            print(f"  –°—Ç–∞—Ç—É—Å: {campaign.status}")
            print(f"  –°–æ–∑–¥–∞–Ω–∞: {campaign.created_at}")
            print(f"  –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: {campaign.sent_at}")
            print(f"  Task ID: {campaign.celery_task_id}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
            from apps.campaigns.models import CampaignRecipient
            recipients = CampaignRecipient.objects.filter(campaign=campaign)
            sent_count = recipients.filter(is_sent=True).count()
            total_count = recipients.count()
            
            print(f"  –ü–æ–ª—É—á–∞—Ç–µ–ª–∏: {sent_count}/{total_count} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            
            if sent_count > 0:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
                sent_recipients = recipients.filter(is_sent=True)[:3]
                for recipient in sent_recipients:
                    try:
                        email = recipient.contact.email
                        print(f"    - {email}: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {recipient.sent_at}")
                    except AttributeError:
                        print(f"    - –ü–æ–ª—É—á–∞—Ç–µ–ª—å ID {recipient.contact.id}: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {recipient.sent_at}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞–º–ø–∞–Ω–∏–π: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print(f"üîç –ü–†–û–í–ï–†–ö–ê SMTP –ù–ê–°–¢–†–û–ï–ö - {datetime.now()}")
    
    check_env_variables()
    check_django_settings()
    
    smtp_ok = test_smtp_connection()
    django_ok = test_django_email()
    
    check_recent_campaigns()
    
    print_section("–†–ï–ó–£–õ–¨–¢–ê–¢")
    if smtp_ok and django_ok:
        print("‚úÖ SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
        print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
        print("  1. –ü–∏—Å—å–º–∞ –ø–æ–ø–∞–¥–∞—é—Ç –≤ —Å–ø–∞–º")
        print("  2. –ü—Ä–æ–±–ª–µ–º—ã —Å DNS –∑–∞–ø–∏—Å—è–º–∏")
        print("  3. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
        print("üí° –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")

if __name__ == '__main__':
    main() 