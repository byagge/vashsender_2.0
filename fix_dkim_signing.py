#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è DKIM –ø–æ–¥–ø–∏—Å–∏ –≤ VashSender
"""

import os
import sys
import subprocess

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ Django –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/var/www/vashsender')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings.production')

import django
django.setup()

from apps.emails.models import Domain
from django.conf import settings

def check_opendkim_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ OpenDKIM"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ OpenDKIM...")
    
    try:
        result = subprocess.run(['systemctl', 'status', 'opendkim'], 
                              capture_output=True, text=True, check=False)
        if 'active (running)' in result.stdout:
            print("‚úÖ OpenDKIM –∑–∞–ø—É—â–µ–Ω")
        else:
            print("‚ùå OpenDKIM –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            print("–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞...")
            subprocess.run(['systemctl', 'start', 'opendkim'], check=True)
            print("‚úÖ OpenDKIM –∑–∞–ø—É—â–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å OpenDKIM: {e}")
        return False
    
    return True

def check_postfix_milter():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ milter –≤ Postfix"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ milter –≤ Postfix...")
    
    try:
        result = subprocess.run(['postconf', '-n'], capture_output=True, text=True, check=True)
        config = result.stdout
        
        if 'smtpd_milters' in config and '12301' in config:
            print("‚úÖ Postfix –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å OpenDKIM")
        else:
            print("‚ùå Postfix –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è milter")
            print("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ milter...")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ milter
            milter_settings = [
                'milter_protocol = 2',
                'milter_default_action = accept', 
                'smtpd_milters = inet:127.0.0.1:12301',
                'non_smtpd_milters = inet:127.0.0.1:12301'
            ]
            
            for setting in milter_settings:
                subprocess.run(['postconf', '-e', setting], check=True)
            
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ milter –¥–æ–±–∞–≤–ª–µ–Ω—ã")
            
            # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Postfix
            subprocess.run(['systemctl', 'reload', 'postfix'], check=True)
            print("‚úÖ Postfix –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Postfix: {e}")
        return False
    
    return True

def check_socket_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–æ–∫–µ—Ç–æ–º OpenDKIM"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∫–µ—Ç–∞ OpenDKIM...")
    
    try:
        result = subprocess.run(['netstat', '-tlnp'], capture_output=True, text=True, check=False)
        if ':12301' in result.stdout:
            print("‚úÖ OpenDKIM —Å–ª—É—à–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 12301")
        else:
            print("‚ùå OpenDKIM –Ω–µ —Å–ª—É—à–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 12301")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∫–µ—Ç–∞: {e}")
        return False
    
    return True

def update_signing_table():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ SigningTable –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤"""
    print("üîç –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ SigningTable...")
    
    try:
        domains = Domain.objects.filter(dkim_verified=True)
        
        if not domains.exists():
            print("‚ùå –ù–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        signing_table_content = ""
        
        for domain in domains:
            selector = domain.dkim_selector
            domain_name = domain.domain_name
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–∞
            key_path = f"/etc/opendkim/keys/{domain_name}/{selector}.private"
            if os.path.exists(key_path):
                signing_table_content += f"*@{domain_name} {selector}._domainkey.{domain_name}\n"
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –¥–æ–º–µ–Ω {domain_name}")
            else:
                print(f"‚ùå –ö–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –¥–æ–º–µ–Ω–∞ {domain_name}: {key_path}")
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º SigningTable
        with open('/etc/opendkim/SigningTable', 'w') as f:
            f.write(signing_table_content)
        
        print("‚úÖ SigningTable –æ–±–Ω–æ–≤–ª–µ–Ω")
        
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º OpenDKIM
        subprocess.run(['systemctl', 'restart', 'opendkim'], check=True)
        print("‚úÖ OpenDKIM –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SigningTable: {e}")
        return False
    
    return True

def test_email_sending():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞"""
    print("üß™ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞...")
    
    try:
        import smtplib
        from email.mime.text import MIMEText
        from email.mime.multipart import MIMEMultipart
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ
        msg = MIMEMultipart()
        msg['From'] = 'test@monocode.app'  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–æ–º–µ–Ω –∏–∑ KeyTable
        msg['To'] = 'test@example.com'
        msg['Subject'] = 'DKIM Test'
        
        body = "This is a DKIM test message"
        msg.attach(MIMEText(body, 'plain'))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ localhost (Postfix + OpenDKIM)
        server = smtplib.SMTP('localhost', 25)
        text = msg.as_string()
        server.sendmail('test@monocode.app', 'test@example.com', text)
        server.quit()
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ localhost")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞: {e}")
        return False
    
    return True

def show_logs():
    """–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ OpenDKIM"""
    print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ OpenDKIM:")
    
    try:
        result = subprocess.run(['journalctl', '-u', 'opendkim', '--no-pager', '-n', '10'], 
                              capture_output=True, text=True, check=False)
        if result.stdout:
            print(result.stdout)
        
        print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ mail:")
        result = subprocess.run(['tail', '-n', '10', '/var/log/mail.log'], 
                              capture_output=True, text=True, check=False)
        if result.stdout:
            print(result.stdout)
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ DKIM –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è VashSender")
    print("=" * 50)
    
    steps = [
        ("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ OpenDKIM", check_opendkim_status),
        ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Postfix milter", check_postfix_milter),
        ("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∫–µ—Ç–∞ OpenDKIM", check_socket_connection),
        ("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ SigningTable", update_signing_table),
        ("–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞", test_email_sending),
    ]
    
    for step_name, step_func in steps:
        print(f"\nüìã {step_name}...")
        if not step_func():
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ: {step_name}")
            show_logs()
            sys.exit(1)
    
    print("\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ DKIM –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:")
    show_logs()
    
    print("\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ø–∏—Å—å–º–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ DKIM-Signature")
    print("3. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: journalctl -u opendkim -f")

if __name__ == "__main__":
    main()
