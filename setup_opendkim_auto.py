#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ OpenDKIM —Å –∫–ª—é—á–∞–º–∏ –∏–∑ apps/emails
"""

import os
import sys
import subprocess
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ Django –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/var/www/vashsender')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings.production')

import django
django.setup()

from apps.emails.models import Domain
from django.conf import settings

def setup_opendkim_config():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenDKIM –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenDKIM –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–¥–ø–∏—Å–∏...")
    
    # –ü—É—Ç–∏ –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º —Ñ–∞–π–ª–∞–º OpenDKIM
    opendkim_conf = "/etc/opendkim.conf"
    key_table = "/etc/opendkim/KeyTable"
    signing_table = "/etc/opendkim/SigningTable"
    trusted_hosts = "/etc/opendkim/TrustedHosts"
    
    # 1. –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª OpenDKIM
    opendkim_config = """# OpenDKIM Configuration
Syslog                  yes
SyslogSuccess           yes
LogWhy                  yes
Canonicalization        relaxed/simple
ExternalIgnoreList      refile:/etc/opendkim/TrustedHosts
InternalHosts           refile:/etc/opendkim/TrustedHosts
KeyTable                refile:/etc/opendkim/KeyTable
SigningTable            refile:/etc/opendkim/SigningTable
Mode                    sv
PidFile                 /var/run/opendkim/opendkim.pid
SignatureAlgorithm      rsa-sha256
UserID                  opendkim:opendkim
Socket                  inet:12301@localhost
"""
    
    try:
        with open(opendkim_conf, 'w') as f:
            f.write(opendkim_config)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω {opendkim_conf}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {opendkim_conf}: {e}")
        return False
    
    # 2. –°–æ–∑–¥–∞–µ–º TrustedHosts
    trusted_hosts_content = """127.0.0.1
::1
localhost
*.vashsender.ru
vashsender.ru
"""
    
    try:
        os.makedirs(os.path.dirname(trusted_hosts), exist_ok=True)
        with open(trusted_hosts, 'w') as f:
            f.write(trusted_hosts_content)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω {trusted_hosts}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {trusted_hosts}: {e}")
        return False
    
    # 3. –ü–æ–ª—É—á–∞–µ–º –¥–æ–º–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–µ–º KeyTable –∏ SigningTable
    domains = Domain.objects.filter(dkim_verified=True)
    
    if not domains.exists():
        print("‚ùå –ù–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤ —Å DKIM –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return False
    
    key_table_content = ""
    signing_table_content = ""
    
    for domain in domains:
        selector = domain.dkim_selector
        domain_name = domain.domain_name
        
        # –ü—É—Ç—å –∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –∫–ª—é—á—É
        if domain.private_key_path and os.path.exists(domain.private_key_path):
            key_path = domain.private_key_path
        else:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É—Ç—å
            keys_dir = getattr(settings, 'DKIM_KEYS_DIR', '/etc/opendkim/keys')
            key_path = os.path.join(keys_dir, domain_name, f"{selector}.private")
        
        if os.path.exists(key_path):
            # KeyTable: selector._domainkey.domain domain:selector:key_path
            key_table_content += f"{selector}._domainkey.{domain_name} {domain_name}:{selector}:{key_path}\n"
            
            # SigningTable: *@domain selector._domainkey.domain
            signing_table_content += f"*@{domain_name} {selector}._domainkey.{domain_name}\n"
            
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –¥–æ–º–µ–Ω {domain_name} —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º {selector}")
        else:
            print(f"‚ùå –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –¥–æ–º–µ–Ω–∞ {domain_name}: {key_path}")
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º KeyTable
    try:
        with open(key_table, 'w') as f:
            f.write(key_table_content)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω {key_table}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {key_table}: {e}")
        return False
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º SigningTable
    try:
        with open(signing_table, 'w') as f:
            f.write(signing_table_content)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω {signing_table}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {signing_table}: {e}")
        return False
    
    # 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    try:
        subprocess.run(['chown', '-R', 'opendkim:opendkim', '/etc/opendkim'], check=True)
        subprocess.run(['chmod', '600', '/etc/opendkim/keys/*/*'], shell=True, check=True)
        subprocess.run(['chmod', '644', key_table, signing_table, trusted_hosts], check=True)
        print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞: {e}")
        return False
    
    return True

def setup_postfix_integration():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Postfix —Å OpenDKIM"""
    
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Postfix —Å OpenDKIM...")
    
    main_cf = "/etc/postfix/main.cf"
    
    # –î–æ–±–∞–≤–ª—è–µ–º milter –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ main.cf
    milter_config = """
# OpenDKIM milter configuration
milter_protocol = 2
milter_default_action = accept
smtpd_milters = inet:localhost:12301
non_smtpd_milters = inet:localhost:12301
"""
    
    try:
        # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π main.cf
        with open(main_cf, 'r') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –ª–∏ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ milter
        if 'smtpd_milters' not in content:
            with open(main_cf, 'a') as f:
                f.write(milter_config)
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã milter –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ {main_cf}")
        else:
            print(f"‚ÑπÔ∏è  Milter –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ {main_cf}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Postfix: {e}")
        return False
    
    return True

def restart_services():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–ª—É–∂–±"""
    
    print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–ª—É–∂–±...")
    
    services = ['opendkim', 'postfix']
    
    for service in services:
        try:
            subprocess.run(['systemctl', 'restart', service], check=True)
            print(f"‚úÖ –ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω {service}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ {service}: {e}")
            return False
    
    return True

def test_opendkim():
    """–¢–µ—Å—Ç OpenDKIM"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenDKIM...")
    
    try:
        result = subprocess.run(['systemctl', 'status', 'opendkim'], 
                              capture_output=True, text=True, check=True)
        print("‚úÖ OpenDKIM –∑–∞–ø—É—â–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
        result = subprocess.run(['journalctl', '-u', 'opendkim', '--no-pager', '-n', '10'], 
                              capture_output=True, text=True, check=False)
        if result.stdout:
            print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ OpenDKIM:")
            print(result.stdout)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è OpenDKIM: {e}")
        return False
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ OpenDKIM –¥–ª—è VashSender")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –æ—Ç root
    if os.geteuid() != 0:
        print("‚ùå –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç root")
        sys.exit(1)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    steps = [
        ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenDKIM –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏", setup_opendkim_config),
        ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Postfix", setup_postfix_integration),
        ("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–ª—É–∂–±", restart_services),
        ("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenDKIM", test_opendkim),
    ]
    
    for step_name, step_func in steps:
        print(f"\nüìã {step_name}...")
        if not step_func():
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ: {step_name}")
            sys.exit(1)
    
    print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenDKIM –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ DNS –∑–∞–ø–∏—Å–∏ –¥–ª—è DKIM –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ø–∏—Å—å–º–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ DKIM-Signature")

if __name__ == "__main__":
    main()
